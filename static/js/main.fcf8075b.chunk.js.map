{"version":3,"sources":["components/card.module.css","App.module.css","components/Timeline.module.css","popUpShow.tsx/overlay.module.css","components/detail/TimelineDetail.module.css","store/hook.ts","store/list-slice.ts","components/NewForm.tsx","components/detail/DeleteButton.tsx","components/detail/TimelineDetail.tsx","components/detail/TimelineList.tsx","components/Timeline.tsx","popUpShow.tsx/overlay.tsx","components/card.tsx","App.tsx","store/list-action.tsx","store/store.ts","index.tsx","components/NewForm.module.css"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","listSlice","createSlice","name","initialState","items","id","gender","age","job","detail","date","description","change","deleteTrigger","showSuccess","reducers","receiveData","state","action","payload","addData","newData","findData","find","push","updateDataList","reduce","prev","cur","removeData","index","findIndex","item","some","indexDetail","length","updateList","splice","listAction","actions","NewForm","dispatch","React","useState","setDescription","useRef","onSubmit","event","preventDefault","newId","Date","toISOString","enteredValue","current","value","className","classes","coverBlock","header","ref","required","type","min","onChange","target","button","DeleteButton","props","deleteButton","onClick","window","confirm","sentId","TimelineDetail","receivedDate","convertedDate","day","concat","dateArray","Object","keys","sort","a","b","parseInt","map","timeline","dateClass","time","sortingItem","timeClassCover","timeClass","span","TimelineList","deleteList","indexItem","setIndexItem","foundIndex","sentDate","indexShow","dayDate","timeDate","theDate","Intl","DateTimeFormat","format","hour","getHours","getMinutes","toString","patientDetail","data-bs-toggle","data-bs-target","upFont","bellowFont","selectClass","loading","Timeline","coverBorder","Backdrop","backdrop","onClose","OverlayModal","overlay","children","portalElement","document","getElementById","Overlay","ReactDom","createPortal","onCloseCard","Card","CloseCardHandler","container","success","App","useEffect","fetchData","fetch","response","ok","Error","json","data","alert","sendRequest","method","body","JSON","stringify","headers","containerCover","headLine","store","configureStore","reducer","ReactDOM","render"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,QAAU,sBAAsB,aAAe,6B,mBCArGD,EAAOC,QAAU,CAAC,WAAa,wBAAwB,SAAW,wB,kBCAlED,EAAOC,QAAU,CAAC,YAAc,8BAA8B,OAAS,yBAAyB,cAAgB,gCAAgC,OAAS,yBAAyB,WAAa,6BAA6B,YAAc,8BAA8B,QAAU,4B,mBCAlRD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,yBAAyB,aAAa,8B,uCCAvGD,EAAOC,QAAU,CAAC,SAAW,iCAAiC,UAAY,kCAAkC,OAAS,+BAA+B,eAAiB,uCAAuC,UAAY,kCAAkC,KAAO,6BAA6B,aAAe,uC,kGCEhSC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,gBCuBzDC,EAAYC,YAAY,CAC5BC,KAAM,cACNC,aAvB+B,CAC/BC,MAAO,CACL,CACEC,GAAI,GACJC,OAAQ,GACRC,IAAK,GACLC,IAAK,GACLC,OAAQ,CACN,CACEJ,GAAI,GACJK,KAAM,GACNC,YAAa,OAKrBC,QAAQ,EACRC,eAAe,EACfC,aAAa,GAMbC,SAAU,CACRC,YADQ,SACIC,EAAOC,GACjBD,EAAMb,MAAQc,EAAOC,QAAQf,OAG/BgB,QALQ,SAKAH,EAAOC,GACb,IAAMG,EAAUH,EAAOC,QAAQf,MAC/Ba,EAAML,QAAS,EAEf,IAAMU,EAAWL,EAAMb,MAAMmB,MAC3B,SAACnB,GAAD,OACEA,EAAME,SAAWe,EAAQf,QACzBF,EAAMG,MAAQc,EAAQd,KACtBH,EAAMI,MAAQa,EAAQb,OAG1B,GAAIc,EAAU,CACZA,EAASb,OAAOe,KAAK,CACnBnB,GAAIgB,EAAQZ,OAAOJ,GACnBK,KAAMW,EAAQZ,OAAOC,KACrBC,YAAaU,EAAQZ,OAAOE,cAG9B,IAAMc,EAAiBR,EAAMb,MAAMsB,QACjC,SAACC,EAAMC,GAAP,OACEA,EAAIvB,KAAOiB,EAASjB,GAApB,sBAA6BsB,GAA7B,CAAmCL,IAAnC,sBAAmDK,GAAnD,CAAyDC,MAC3D,IAGFX,EAAMb,MAAQqB,OAEdR,EAAMb,MAAMoB,KAAK,CACfnB,GAAIgB,EAAQhB,GACZC,OAAQe,EAAQf,OAChBC,IAAKc,EAAQd,IACbC,IAAKa,EAAQb,IACbC,OAAQ,CACN,CACEJ,GAAIgB,EAAQZ,OAAOJ,GACnBK,KAAMW,EAAQZ,OAAOC,KACrBC,YAAaU,EAAQZ,OAAOE,iBAatCkB,WArDQ,SAqDGZ,EAAOC,GAChB,IAAMY,EAAQb,EAAMb,MAAM2B,WAAU,SAACC,GAAD,OAClCA,EAAKvB,OAAOwB,MAAK,SAACD,GAAD,OAAUA,EAAK3B,KAAOa,EAAOC,cAE1Ce,EAAcjB,EAAMb,MAAM0B,GAAOrB,OAAOsB,WAC5C,SAACC,GAAD,OAAUA,EAAK3B,KAAOa,EAAOC,WAG/B,GAAyC,IAArCF,EAAMb,MAAM0B,GAAOrB,OAAO0B,OAAc,CAC1C,IAAMC,EAAanB,EAAMb,MAAMsB,QAAY,SAACC,EAAMC,GAAP,OAAeA,EAAIvB,KAAOY,EAAMb,MAAM0B,GAAOzB,GAA9B,sBAAuCsB,GAAvC,CAA6CC,IAA7C,YAAwDD,KAAO,IACzHV,EAAMb,MAAQgC,EACdnB,EAAMJ,eAAgB,OAEtBI,EAAMb,MAAM0B,GAAOrB,OAAO4B,OAAOH,EAAa,GAC9CjB,EAAMJ,eAAgB,EAGxBI,EAAML,QAAS,GAGjBE,YAzEQ,SAyEIG,EAAOC,GACjBD,EAAMH,YAAiC,SAAnBI,EAAOC,YAKpBmB,EAAatC,EAAUuC,QACrBvC,I,uBC/BAwC,EAxEW,WACxB,IAAMC,EAAW7C,IAEjB,EAAsC8C,IAAMC,SAAS,IAArD,mBAAOhC,EAAP,KAAoBiC,EAApB,KAEMtC,EAASuC,iBAA0B,MACnCtC,EAAMsC,iBAAyB,MAC/BrC,EAAMqC,iBAAyB,MAC/BnC,EAAOmC,iBAAyB,MAgCtC,OACE,uBAAMC,SA3Bc,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,GAAQ,IAAIC,MAAOC,cAEnBC,EAAqB,CACzBhD,MAAO,CACLC,GAAI4C,EACJ3C,OAAQA,EAAO+C,QAASC,MACxB/C,IAAKA,EAAI8C,QAASC,MAClB9C,IAAKA,EAAI6C,QAASC,MAClB7C,OAAQ,CACNJ,GAAI4C,EACJvC,KAAMA,EAAK2C,QAASC,MACpB3C,YAAaA,KAKnB8B,EAASH,EAAWlB,QAAQgC,IAC5BX,EAASH,EAAWxB,YAAY,SAEhCJ,EAAK2C,QAASC,MAAQ,GACtBV,EAAe,KAIf,UACE,sBAAKW,UAAS,gCAA2BC,IAAQC,YAAjD,UACE,oBAAIF,UAAWC,IAAQE,OAAvB,4FACA,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBAAOA,UAAU,aAAjB,gCACA,yBAAQA,UAAU,cAAcI,IAAKrD,EAAQsD,UAAQ,EAArD,UACE,wDACA,oEAGJ,sBAAKL,UAAU,kBAAf,UACE,uBAAOA,UAAU,aAAjB,sCACA,uBAAOA,UAAU,eAAeM,KAAK,SAASC,IAAI,IAAIH,IAAKpD,EAAKqD,UAAQ,UAG5E,uBAAOL,UAAU,aAAjB,4CACA,uBAAOA,UAAU,eAAeM,KAAK,OAAOF,IAAKnD,EAAKoD,UAAQ,OAEhE,sBAAKL,UAAS,gCAA2BC,IAAQC,YAAjD,UACE,oBAAIF,UAAWC,IAAQE,OAAvB,kGACA,uBAAOH,UAAU,aAAjB,wDACA,uBAAOA,UAAU,oBAAoBM,KAAK,iBAAiBF,IAAKjD,EAAMkD,UAAQ,IAC9E,uBAAOL,UAAU,aAAjB,0EACA,0BAAUA,UAAU,oBAAoBD,MAAO3C,EAAaoD,SAvDvC,SAAChB,GAC1BH,EAAeG,EAAMiB,OAAOV,QAsDkEM,UAAQ,IAClG,wBAAQL,UAAWC,IAAQS,OAA3B,yF,+CCnDOC,EAlBoC,SAACC,GAClD,IAAM1B,EAAW7C,IAQjB,OACE,qBAAK2D,UAAS,uBAAd,SACE,mBAAGA,UAAS,UAAKC,IAAQY,cAAgBC,QARnB,WACpBC,OAAOC,QAAQ,uCACjB9B,EAASH,EAAWT,WAAWsC,EAAMK,UAMrC,kBC+CSC,EAzD+C,SAACN,GAC7D,IAAMO,EAAeP,EAAMO,aAErBC,EAAgBD,EAAahD,QACjC,SAACC,EAAMC,GAAP,mBAAC,eACID,GADL,kBAEGC,EAAIgD,KAAOjD,EAAKC,EAAIgD,MAAQ,IAAIC,OAAOjD,OAE1C,IAGIkD,EAAYC,OAAOC,KAAKL,GAE9B,OACE,qBAAKpB,UAAS,uBAAd,SACGuB,EACEG,MAAK,SAACC,EAAGC,GAAJ,OAAUC,SAASF,GAAKE,SAASD,MACtCE,KAAI,SAACrD,GAAD,OACH,qBAAgBuB,UAAS,uBAAzB,SACE,sBAAKA,UAAS,MAAd,UACE,qBACEA,UAAS,8CAAyCC,IAAQ8B,UAD5D,SAGE,mBAAG/B,UAAS,UAAKC,IAAQ+B,WAAzB,SAAuCvD,MAGzC,qBACEuB,UAAS,+CAA0CC,IAAQ/C,QAD7D,SAGGiE,EACEO,MAAK,SAACC,EAAGC,GAAJ,OAAUC,SAASF,EAAEM,MAAQJ,SAASD,EAAEK,SAC7CH,KAAI,SAACI,GAAD,OACH,qBAEElC,UAAS,UAAKC,IAAQkC,gBAFxB,SAIG1D,IAASyD,EAAYb,KACpB,sBAAKrB,UAAS,UAAKC,IAAQmC,WAA3B,UACE,oBAAGpC,UAAS,OAAZ,UACGkC,EAAYD,KAAM,IACnB,sBAAMjC,UAAS,UAAKC,IAAQoC,MAA5B,SACGH,EAAY9E,iBAGjB,cAAC,EAAD,CAAc6D,OAAQiB,EAAYpF,SAXjCoF,EAAYpF,aAfnB2B,SCwEL6D,EAvFgB,WAC7B,IAAMzF,EAAQN,GAAe,SAACmB,GAAD,OAAWA,EAAMb,MAAMA,SAC9C0F,EAAahG,GAAe,SAAAmB,GAAK,OAAIA,EAAMb,MAAMS,iBAEvD,EAAkC6B,IAAMC,SAAS,GAAjD,mBAAOoD,EAAP,KAAkBC,EAAlB,KAEIC,EAAqB,EAQnBC,EAAsB,GAExBC,EAAoB,EAqCxB,OApCkB,IAAfL,IACDK,EAAYJ,GAGd3F,EAAM+F,GAAW1F,OAAO4E,KAAI,SAAC5E,GAC3B,IAAI2F,EAAkB,GAClBC,EAAmB,GACvB,GAAI5F,EAAOC,KAAM,CACf,IAAM4F,EAAU,IAAIpD,KAAKzC,EAAOC,MAChC0F,EAAU,IAAIG,KAAKC,eAAe,SAASC,OAAOH,GAElD,IAAMI,EAAO,IAAIxD,KAAKoD,GAASK,WACzB7C,EAAM,IAAIZ,KAAKoD,GAASM,aAa9BP,GAVIK,EAAO,GACI,IAAMA,EAENA,EAAKG,YAOI,KALpB/C,EAAM,GACI,IAAMA,EAENA,EAAI+C,YAKpBX,EAAS1E,KAAK,CACZnB,GAAII,EAAOJ,GACXuE,IAAKwB,EACLZ,KAAMa,EACN1F,YAAaF,EAAOE,iBAKtB,gCACE,qBAAK4C,UAAU,qCAAf,SACGnD,EAAM,GAAGC,GACR,sBAAKkD,UAAS,cAASC,IAAQsD,eAA/B,UACE,sBAAKC,iBAAe,WAAWC,iBAAe,oBAA9C,UACE,oBAAGzD,UAAS,cAASC,IAAQyD,QAA7B,uDACU7G,EAAM+F,GAAW7F,OAD3B,6BACyCF,EAAM+F,GAAW5F,IAD1D,mBAGA,oBAAGgD,UAAS,cAASC,IAAQ0D,YAA7B,4CACS9G,EAAM+F,GAAW3F,UAG5B,wBACEH,GAAG,mBACHkD,UAAS,uBAAkBC,IAAQ2D,aACnCpD,SA7De,SAAChB,GAC1BkD,EAAa7F,EAAM2B,WAAU,SAACC,GAAD,OAAUA,EAAK3B,KAAO0C,EAAMiB,OAAOV,SAEhE0C,EAAaC,IAuDL,SAKG7F,EAAMiF,KAAI,SAACrD,GAAD,OACT,yBAAQsB,MAAOtB,EAAK3B,GAApB,uDACU2B,EAAK1B,OADf,6BAC6B0B,EAAKzB,IADlC,gDACiDyB,EAAKxB,MADzBwB,EAAK3B,YAOxC,mBAAGkD,UAAWC,IAAQ4D,QAAtB,uBAGHhH,EAAM,GAAGC,GAAK,cAAC,EAAD,CAAgBqE,aAAcwB,IAAe,SC3EnDmB,EAXY,WACzB,OACE,sBAAK9D,UAAS,iCAA4BC,IAAQ8D,aAAlD,UACE,qBAAK/D,UAAU,gCAAf,SACE,oBAAIA,UAAWC,IAAQE,OAAvB,wBAEF,cAAC,EAAD,Q,iBCLA6D,EAA6C,SAACpD,GAChD,OACI,qBACIZ,UAAWC,IAAQgE,SACnBnD,QAASF,EAAMsD,WAKrBC,EAA8B,SAACvD,GACjC,OACI,qBAAKZ,UAAWC,IAAQmE,QAAxB,SACI,8BAAMxD,EAAMyD,cAKlBC,EAAgBC,SAASC,eAAe,WAe/BC,EAbqC,SAAC7D,GACjD,OACI,eAAC,WAAD,WACK8D,IAASC,aACN,cAAC,EAAD,CAAUT,QAAStD,EAAMgE,cAAiBN,GAE7CI,IAASC,aACN,cAAC,EAAD,UAAe/D,EAAMyD,WAA0BC,O,iBCJhDO,EArBQ,WACrB,IAAM3F,EAAW7C,IAEXyI,EAAmB,WACvB5F,EAASH,EAAWxB,YAAY,WAGlC,OACE,cAAC,EAAD,CAASqH,YAAaE,EAAtB,SACE,sBAAK9E,UAAWC,IAAQ8E,UAAxB,UACE,mBAAG/E,UAAWC,IAAQ+E,QAAtB,gCACA,qBAAKhF,UAAS,uBAAd,SACE,mBAAGA,UAAS,UAAKC,IAAQY,cAAgBC,QAASgE,EAAlD,uB,yCC+BKG,MAtCf,WACE,IAAM/F,EAAW7C,IACXQ,EAAQN,GAAe,SAAAmB,GAAK,OAAIA,EAAMb,SAY5C,OAVAqI,qBAAU,WACRhG,ECXF,uCAAO,WAAOA,GAAP,iBAAAyC,EAAA,6DACCwD,EADD,+BAAAxD,EAAA,MACa,8BAAAA,EAAA,sEACOyD,MACrB,sEAFc,WACVC,EADU,QAKFC,GALE,sBAMR,IAAIC,MAAM,yBANF,uBASGF,EAASG,OATZ,cASVC,EATU,yBAWTA,GAXS,2CADb,uEAgBgBN,IAhBhB,OAgBGM,EAhBH,OAiBHvG,EAASH,EAAWtB,YAAYgI,EAAKA,OAjBlC,gDAmBHC,MAAM,EAAD,IAnBF,yDAAP,yDDYG,IAEHR,qBAAU,WCWgB,IAACO,EDVtB5I,EAAMQ,QACP6B,GCSuBuG,EDTD5I,ECU1B,sBAAO,4BAAA8E,EAAA,6DACCgE,EADD,+BAAAhE,EAAA,MACe,sBAAAA,EAAA,sEACKyD,MACrB,qEACA,CACIQ,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACjBN,KAAMA,IAEVO,QAAS,CACL,eAAiB,sBATT,iBAcJV,GAdI,sBAeR,IAAIC,MAAO,wBAfH,2CADf,uEAqBKI,IArBL,sDAuBDD,MAAK,MAvBJ,4DDRJ,CAAC7I,EAAOqC,IAGT,sBAAKc,UAAWC,IAAQC,WAAxB,UACE,sBAAKF,UAAS,4BAAuBC,IAAQgG,gBAA7C,UACE,oBAAIjG,UAAS,UAAKC,IAAQiG,UAA1B,sCAGA,sBAAKlG,UAAU,MAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,6BAAf,SACE,cAAC,EAAD,YAILnD,EAAMU,aACL,8BACA,cAAC,EAAD,UEnCO4I,EAJDC,YAAe,CAAEC,QAAS,CAAExJ,MAAOJ,EAAU4J,WCI3DC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF5B,SAASC,eAAe,U,kBCV1BrI,EAAOC,QAAU,CAAC,WAAa,4BAA4B,OAAS,wBAAwB,OAAS,wBAAwB,aAAa,+B","file":"static/js/main.fcf8075b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__mh2eK\",\"success\":\"card_success__1_emx\",\"deleteButton\":\"card_deleteButton__2wJea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverBlock\":\"App_coverBlock__17ARy\",\"headLine\":\"App_headLine__1xDOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverBorder\":\"Timeline_coverBorder__35Go8\",\"header\":\"Timeline_header__2GGWD\",\"patientDetail\":\"Timeline_patientDetail__JFXsu\",\"upFont\":\"Timeline_upFont__38puB\",\"bellowFont\":\"Timeline_bellowFont__13bOZ\",\"selectClass\":\"Timeline_selectClass__1kusa\",\"loading\":\"Timeline_loading__3UFCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"overlay_backdrop__my1r2\",\"overlay\":\"overlay_overlay__uqVFE\",\"slide-down\":\"overlay_slide-down__3kyW6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeline\":\"TimelineDetail_timeline__1R6j4\",\"dateClass\":\"TimelineDetail_dateClass__23uyD\",\"detail\":\"TimelineDetail_detail__1-UzC\",\"timeClassCover\":\"TimelineDetail_timeClassCover__2e_e1\",\"timeClass\":\"TimelineDetail_timeClass__1at34\",\"span\":\"TimelineDetail_span__16-0w\",\"deleteButton\":\"TimelineDetail_deleteButton__155Mi\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { RootState, AppDispatch } from './store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { Item, Items } from \"../modal/items\";\r\n\r\ntype SliceState = Items;\r\n\r\nconst initialState: SliceState = {\r\n  items: [\r\n    {\r\n      id: \"\",\r\n      gender: \"\",\r\n      age: \"\",\r\n      job: \"\",\r\n      detail: [\r\n        {\r\n          id: \"\",\r\n          date: \"\",\r\n          description: \"\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  change: false,\r\n  deleteTrigger: false,\r\n  showSuccess: false,\r\n};\r\n\r\nconst listSlice = createSlice({\r\n  name: \"dataStorage\",\r\n  initialState,\r\n  reducers: {\r\n    receiveData(state, action: PayloadAction<Items>) {\r\n      state.items = action.payload.items;\r\n    },\r\n\r\n    addData(state, action: PayloadAction<Item>) {\r\n      const newData = action.payload.items;\r\n      state.change = true;\r\n\r\n      const findData = state.items.find(\r\n        (items) =>\r\n          items.gender === newData.gender &&\r\n          items.age === newData.age &&\r\n          items.job === newData.job\r\n      );\r\n\r\n      if (findData) {\r\n        findData.detail.push({\r\n          id: newData.detail.id,\r\n          date: newData.detail.date,\r\n          description: newData.detail.description,\r\n        });\r\n\r\n        const updateDataList = state.items.reduce<any>(\r\n          (prev, cur) =>\r\n            cur.id === findData.id ? [...prev, findData] : [...prev, cur],\r\n          []\r\n        );\r\n\r\n        state.items = updateDataList;\r\n      } else {\r\n        state.items.push({\r\n          id: newData.id,\r\n          gender: newData.gender,\r\n          age: newData.age,\r\n          job: newData.job,\r\n          detail: [\r\n            {\r\n              id: newData.detail.id,\r\n              date: newData.detail.date,\r\n              description: newData.detail.description,\r\n            },\r\n          ],\r\n        });\r\n      }\r\n    },\r\n\r\n    /*\r\n    deleteButtonClick(state, action: PayloadAction<string>) {\r\n      state.showSuccess = action.payload === \"true\" ? true : false;\r\n    },\r\n    */\r\n\r\n    removeData(state, action: PayloadAction<string>) {\r\n      const index = state.items.findIndex((item) =>\r\n        item.detail.some((item) => item.id === action.payload)\r\n      );\r\n      const indexDetail = state.items[index].detail.findIndex(\r\n        (item) => item.id === action.payload\r\n      );\r\n\r\n      if (state.items[index].detail.length === 1) {\r\n        const updateList = state.items.reduce<any>((prev, cur) => cur.id !== state.items[index].id ? [...prev, cur] : [...prev], []);\r\n        state.items = updateList;\r\n        state.deleteTrigger = true;\r\n      } else {\r\n        state.items[index].detail.splice(indexDetail, 1);\r\n        state.deleteTrigger = false;\r\n      }\r\n\r\n      state.change = true;\r\n    },\r\n\r\n    showSuccess(state, action: PayloadAction<string>) {\r\n      state.showSuccess = action.payload === \"true\" ? true : false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const listAction = listSlice.actions;\r\nexport default listSlice;\r\n","import React, { useRef } from \"react\";\r\nimport { Item } from \"../modal/items\";\r\nimport { useAppDispatch } from \"../store/hook\";\r\nimport { listAction } from \"../store/list-slice\";\r\n\r\nimport classes from \"./NewForm.module.css\";\r\n\r\nconst NewForm: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [description, setDescription] = React.useState(\"\");\r\n\r\n  const gender = useRef<HTMLSelectElement>(null);\r\n  const age = useRef<HTMLInputElement>(null);\r\n  const job = useRef<HTMLInputElement>(null);\r\n  const date = useRef<HTMLInputElement>(null);\r\n\r\n  const descriptionHandler = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const newId = new Date().toISOString();\r\n\r\n    const enteredValue: Item = {\r\n      items: {\r\n        id: newId,\r\n        gender: gender.current!.value,\r\n        age: age.current!.value,\r\n        job: job.current!.value,\r\n        detail: {\r\n          id: newId,\r\n          date: date.current!.value,\r\n          description: description,\r\n        },\r\n      },\r\n    };\r\n\r\n    dispatch(listAction.addData(enteredValue));\r\n    dispatch(listAction.showSuccess(\"true\"));\r\n\r\n    date.current!.value = \"\";\r\n    setDescription(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className={`container-lg mb-4 p-4 ${classes.coverBlock}`}>\r\n        <h2 className={classes.header}>ข้อมูลผู้ป่วย</h2>\r\n        <div className=\"mb-3 row\">\r\n          <div className=\"col-md-6 col-12\">\r\n            <label className=\"form-label\">เพศ</label>\r\n            <select className=\"form-select\" ref={gender} required>\r\n              <option>ชาย</option>\r\n              <option>หญิง</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-md-6 col-12\">\r\n            <label className=\"form-label\">อายุ</label>\r\n            <input className=\"form-control\" type=\"number\" min=\"1\" ref={age} required />\r\n          </div>\r\n        </div>\r\n        <label className=\"form-label\">อาชีพ</label>\r\n        <input className=\"form-control\" type=\"text\" ref={job} required />\r\n      </div>\r\n      <div className={`container-lg mb-4 p-4 ${classes.coverBlock}`}>\r\n        <h2 className={classes.header}>ข้อมูลไทม์ไลน์</h2>\r\n        <label className=\"form-label\">วันเวลา</label>\r\n        <input className=\"mb-3 form-control\" type=\"datetime-local\" ref={date} required />\r\n        <label className=\"form-label\">รายละเอียด</label>\r\n        <textarea className=\"mb-3 form-control\" value={description} onChange={descriptionHandler} required></textarea>\r\n        <button className={classes.button}>+ เพิ่มข้อมูล</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewForm;\r\n","import { useAppDispatch } from \"../../store/hook\";\r\nimport { listAction } from \"../../store/list-slice\";\r\nimport classes from \"./TimelineDetail.module.css\";\r\n\r\nconst DeleteButton: React.FC<{ sentId: string }> = (props) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const removeDataHandler = () => {\r\n    if (window.confirm(\"Do you want to remove this detail?\")) {\r\n      dispatch(listAction.removeData(props.sentId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`container-lg m-0 p-0`}>\r\n      <p className={`${classes.deleteButton}`} onClick={removeDataHandler}>\r\n        x\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { dayType } from \"../../modal/items\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\nimport classes from \"./TimelineDetail.module.css\";\r\n\r\nconst TimelineDetail: React.FC<{ receivedDate: dayType[] }> = (props) => {\r\n  const receivedDate = props.receivedDate;\r\n\r\n  const convertedDate = receivedDate.reduce<any>(\r\n    (prev, cur) => ({\r\n      ...prev,\r\n      [cur.day]: (prev[cur.day] || []).concat(cur),\r\n    }),\r\n    {}\r\n  );\r\n\r\n  const dateArray = Object.keys(convertedDate);\r\n\r\n  return (\r\n    <div className={`container-lg m-0 p-0`}>\r\n      {dateArray\r\n        .sort((a, b) => parseInt(a) - parseInt(b))\r\n        .map((item) => (\r\n          <div key={item} className={`container-lg m-0 p-0`}>\r\n            <div className={`row`}>\r\n              <div\r\n                className={`container-lg col-3 col-sm-2 m-0 p-0 ${classes.timeline}`}\r\n              >\r\n                <p className={`${classes.dateClass}`}>{item}</p>\r\n              </div>\r\n\r\n              <div\r\n                className={`container-lg col-8 col-sm-9 mb-4 p-2 ${classes.detail}`}\r\n              >\r\n                {receivedDate\r\n                  .sort((a, b) => parseInt(a.time) - parseInt(b.time))\r\n                  .map((sortingItem) => (\r\n                    <div\r\n                      key={sortingItem.id}\r\n                      className={`${classes.timeClassCover}`}\r\n                    >\r\n                      {item === sortingItem.day && (\r\n                        <div className={`${classes.timeClass}`}>\r\n                          <p className={`mb-2`}>\r\n                            {sortingItem.time}{\" \"}\r\n                            <span className={`${classes.span}`}>\r\n                              {sortingItem.description}\r\n                            </span>\r\n                          </p>\r\n                          <DeleteButton sentId={sortingItem.id} />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimelineDetail;\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { useAppSelector } from \"../../store/hook\";\r\n\r\nimport { dayType } from \"../../modal/items\";\r\n\r\nimport classes from \"../Timeline.module.css\";\r\nimport TimelineDetail from \"./TimelineDetail\";\r\n\r\nconst TimelineList: React.FC = () => {\r\n  const items = useAppSelector((state) => state.items.items);\r\n  const deleteList = useAppSelector(state => state.items.deleteTrigger);\r\n\r\n  const [indexItem, setIndexItem] = React.useState(0);\r\n\r\n  let foundIndex: number = 0;\r\n\r\n  const selectValueHandler = (event: ChangeEvent<HTMLSelectElement>) => {\r\n    foundIndex = items.findIndex((item) => item.id === event.target.value);\r\n\r\n    setIndexItem(foundIndex);\r\n  };\r\n\r\n  const sentDate: dayType[] = [];\r\n\r\n  let indexShow: number = 0;\r\n  if(deleteList === false) {\r\n    indexShow = indexItem;\r\n  }\r\n\r\n  items[indexShow].detail.map((detail) => {\r\n    let dayDate: string = \"\";\r\n    let timeDate: string = \"\";\r\n    if (detail.date) {\r\n      const theDate = new Date(detail.date);\r\n      dayDate = new Intl.DateTimeFormat(\"en-GB\").format(theDate);\r\n\r\n      const hour = new Date(theDate).getHours();\r\n      const min = new Date(theDate).getMinutes();\r\n      let updateHour: string = \"\";\r\n      let updateMin: string = \"\";\r\n      if (hour < 10) {\r\n        updateHour = \"0\" + hour;\r\n      } else {\r\n        updateHour = hour.toString();\r\n      }\r\n      if (min < 10) {\r\n        updateMin = \"0\" + min;\r\n      } else {\r\n        updateMin = min.toString();\r\n      }\r\n      timeDate = updateHour + \":\" + updateMin;\r\n    }\r\n\r\n    sentDate.push({\r\n      id: detail.id,\r\n      day: dayDate,\r\n      time: timeDate,\r\n      description: detail.description,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-4 d-flex justify-content-center\">\r\n        {items[0].id ? (\r\n          <div className={`btn ${classes.patientDetail}`}>\r\n            <div data-bs-toggle=\"collapse\" data-bs-target=\"#collapse-content\">\r\n              <p className={`m-0 ${classes.upFont}`}>\r\n                ผู้ป่วย{items[indexShow].gender} อายุ {items[indexShow].age} ปี\r\n              </p>\r\n              <p className={`m-0 ${classes.bellowFont}`}>\r\n                อาชีพ {items[indexShow].job}\r\n              </p>\r\n            </div>\r\n            <select\r\n              id=\"collapse-content\"\r\n              className={`collapse p-1 ${classes.selectClass}`}\r\n              onChange={selectValueHandler}\r\n            >\r\n              {items.map((item) => (\r\n                <option value={item.id} key={item.id}>\r\n                  ผู้ป่วย{item.gender} อายุ {item.age} ปี อาชีพ {item.job}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        ) : (\r\n          <p className={classes.loading}>Loading</p>\r\n        )}\r\n      </div>\r\n      {items[0].id ? <TimelineDetail receivedDate={sentDate} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimelineList;\r\n","import TimelineList from \"./detail/TimelineList\";\r\n\r\nimport classes from \"./Timeline.module.css\";\r\n\r\nconst Timeline: React.FC = () => {\r\n  return (\r\n    <div className={`container-lg mb-4 py-3 ${classes.coverBorder}`}>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <h1 className={classes.header}>Timeline</h1>\r\n      </div>\r\n      <TimelineList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport classes from \"./overlay.module.css\";\r\n\r\nconst Backdrop: React.FC <{onClose: () => void}> = (props) => {\r\n    return (\r\n        <div\r\n            className={classes.backdrop}\r\n            onClick={props.onClose} \r\n        />\r\n    );\r\n};\r\n\r\nconst OverlayModal: React.FC <{}> = (props) => {\r\n    return (\r\n        <div className={classes.overlay}>\r\n            <div>{props.children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlay\") as HTMLElement;\r\n\r\nconst Overlay:React.FC<{onCloseCard: () => void}> = (props) => {\r\n    return (\r\n        <Fragment>\r\n            {ReactDom.createPortal(\r\n                <Backdrop onClose={props.onCloseCard} />, portalElement\r\n            )}\r\n            {ReactDom.createPortal(\r\n                <OverlayModal>{props.children}</OverlayModal>, portalElement\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Overlay;","import Overlay from \"../popUpShow.tsx/overlay\";\r\nimport { useAppDispatch } from \"../store/hook\";\r\nimport { listAction } from \"../store/list-slice\";\r\n\r\nimport classes from \"./card.module.css\";\r\n\r\nconst Card: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const CloseCardHandler = () => {\r\n    dispatch(listAction.showSuccess(\"false\"));\r\n  };\r\n\r\n  return (\r\n    <Overlay onCloseCard={CloseCardHandler}>\r\n      <div className={classes.container}>\r\n        <p className={classes.success}>Successfully sent!</p>\r\n        <div className={`container-lg m-0 p-0`}>\r\n          <p className={`${classes.deleteButton}`} onClick={CloseCardHandler}>\r\n            x\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useEffect } from \"react\";\n\nimport NewForm from \"./components/NewForm\";\nimport Timeline from \"./components/Timeline\";\nimport Card from \"./components/card\";\n\nimport { useAppDispatch, useAppSelector } from \"./store/hook\";\nimport { fetchListdata, sendListData } from \"./store/list-action\";\n\nimport classes from \"./App.module.css\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const items = useAppSelector(state => state.items);\n\n  useEffect(()=>{\n    dispatch(fetchListdata());\n  }, []);\n\n  useEffect(()=> {\n    if(items.change) {\n      dispatch(sendListData(items));\n    }\n  }, [items, dispatch]);\n\n  return (\n    <div className={classes.coverBlock}>\n      <div className={`container-lg pt-4 ${classes.containerCover}`}>\n        <h1 className={`${classes.headLine}`}>\n          COVID Timeline Generator\n        </h1>\n        <div className=\"row\">\n          <div className=\"col-xl-5 col-lg-5 col-md-4\">\n            <NewForm />\n          </div>\n          <div className=\"col-xl-7 col-lg-7 col-md-8\">\n            <Timeline />\n          </div>\n        </div>\n      </div>\n      {items.showSuccess &&\n        <div>\n        <Card />\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { listAction } from \"./list-slice\";\r\nimport { Items } from '../modal/items';\r\n\r\n// GET method\r\nexport const fetchListdata = () => {\r\n  return async (dispatch: any) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://covid-timeline-f6472-default-rtdb.firebaseio.com/data.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Could not fetch data!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const data = await fetchData();\r\n      dispatch(listAction.receiveData(data.data));\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n};\r\n\r\n// PUT method\r\nexport const sendListData = (data: Items) => {\r\n  return async () => {\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://covid-timeline-f6472-default-rtdb.firebaseio.com/data.json\",\r\n        {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n                data: data,\r\n            }),\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n          throw new Error ('Could not send data!');\r\n      }\r\n    };\r\n\r\n    try {\r\n        await sendRequest();\r\n    } catch (error) {\r\n        alert (error);\r\n    }\r\n  };\r\n};\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport listSlice from \"./list-slice\";\r\n\r\nconst store = configureStore({ reducer: { items: listSlice.reducer } });\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverBlock\":\"NewForm_coverBlock__3Wlxu\",\"header\":\"NewForm_header__2I93Q\",\"button\":\"NewForm_button__3hlXK\",\"form-label\":\"NewForm_form-label__vd3SK\"};"],"sourceRoot":""}